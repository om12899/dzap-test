{"ast":null,"code":"var _jsxFileName = \"/Users/omthakkar/Documents/ReactJs/dzap/dzap-test/src/components/Content.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Content() {\n  _s();\n  const [inputText, setInputText] = useState('');\n  const [errorMessages, setErrorMessages] = useState([]);\n  const [duplicateAddressLines, setDuplicateAddressLines] = useState([]);\n  const CombineBalances = () => {\n    console.log(\"combine balances clicked\");\n  };\n  const keepFirst = () => {\n    console.log(\"Keep First clicked\");\n  };\n\n  // Function to validate Ethereum address (basic check for hexadecimal string)\n  const isValidEthereumAddress = address => {\n    const ethereumAddressRegex = /^(0x)?[0-9a-fA-F]{40}$/;\n    return ethereumAddressRegex.test(address);\n  };\n  const findDuplicateAddressLines = array => {\n    const addressToLinesMap = new Map();\n    const duplicateAddresses = new Map();\n    array.forEach((item, index) => {\n      const parts = item.split(' ');\n      const address = parts[0];\n      if (addressToLinesMap.has(address)) {\n        const lines = addressToLinesMap.get(address);\n        lines.push(index);\n        addressToLinesMap.set(address, lines);\n\n        // Store the duplicate address and its lines\n        if (!duplicateAddresses.has(address)) {\n          duplicateAddresses.set(address, lines);\n        }\n      } else {\n        addressToLinesMap.set(address, [index]);\n      }\n    });\n\n    // Convert the duplicateAddresses Map to an array of objects\n    const duplicateAddressLines = Array.from(duplicateAddresses, ([address, lines]) => ({\n      address,\n      lines\n    }));\n    console.log('Duplicate addresses found:');\n    duplicateAddressLines.forEach(({\n      address,\n      lines\n    }) => {\n      console.log(`Address: ${address} - Lines: ${lines.join(', ')}`);\n    });\n    return duplicateAddressLines;\n  };\n  const checkError = e => {\n    e.preventDefault();\n    const lines = inputText.split('\\n');\n    const errors = [];\n    lines.forEach((line, index) => {\n      const parts = line.trim().split(/[,:= ]+/); // Split by colons, commas, spaces, or equal signs\n      if (parts.length !== 2) {\n        errors.push(`Line ${index + 1} does not have exactly two parts.`);\n      } else {\n        const [address, value] = parts;\n        if (!isValidEthereumAddress(address)) {\n          errors.push(`Line ${index + 1} contains an invalid Ethereum address.`);\n        }\n        if (!/^\\d+$/.test(value)) {\n          errors.push(`Line ${index + 1} contains a non-numeric value.`);\n        }\n      }\n    });\n    const duplicateLines = findDuplicateAddressLines(lines);\n    setDuplicateAddressLines(duplicateLines);\n    setErrorMessages(errors);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container py-2\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"exampleFormControlTextarea1\",\n          className: \"form-label\",\n          children: \"Addresses with Amounts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"form-control bg-light text-emphasis-dark\",\n          rows: \"9\",\n          value: inputText,\n          onChange: e => setInputText(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Separated by ',' or ' ' or '='\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), errorMessages.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex border border-danger rounded-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-2\",\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            width: \"16\",\n            height: \"16\",\n            fill: \"red\",\n            className: \"bi bi-exclamation-circle\",\n            viewBox: \"0 0 16 16\",\n            children: [/*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M7.002 11a1 1 0 1 1 2 0 1 1 0 0 1-2 0zM7.1 4.995a.905.905 0 1 1 1.8 0l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 4.995z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-danger p-2\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"p-1\",\n            children: errorMessages.map((errorMessage, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"list-group-item\",\n              children: errorMessage\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this), duplicateAddressLines.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3 row justify-content-between container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex text-danger  \",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-danger d-flex\",\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Duplicated\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 50\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex  col-md-3 ms-auto\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"px-2\",\n              onClick: CombineBalances,\n              children: \"Keep the first one\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 10\n            }, this), \"|\", /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"px-2\",\n              onClick: keepFirst,\n              children: \"Combine Balances\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex border border-danger rounded-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-4\",\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              xmlns: \"http://www.w3.org/2000/svg\",\n              width: \"16\",\n              height: \"16\",\n              fill: \"red\",\n              class: \"bi bi-exclamation-circle\",\n              viewBox: \"0 0 16 16\",\n              children: [/*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 7\n              }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M7.002 11a1 1 0 1 1 2 0 1 1 0 0 1-2 0zM7.1 4.995a.905.905 0 1 1 1.8 0l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 4.995z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 7\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-danger p-1\",\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: duplicateAddressLines.map(({\n                address,\n                lines\n              }, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [\"Address \", address, \" encountered duplicate on line: \", lines.map(lineNumber => lineNumber + 1).join(', ')]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 9\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-grid gap-2 py-2\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: checkError,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n_s(Content, \"FABUv19hyfHnZoG4pvvVgUhU/H0=\");\n_c = Content;\nexport default Content;\nvar _c;\n$RefreshReg$(_c, \"Content\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Content","_s","inputText","setInputText","errorMessages","setErrorMessages","duplicateAddressLines","setDuplicateAddressLines","CombineBalances","console","log","keepFirst","isValidEthereumAddress","address","ethereumAddressRegex","test","findDuplicateAddressLines","array","addressToLinesMap","Map","duplicateAddresses","forEach","item","index","parts","split","has","lines","get","push","set","Array","from","join","checkError","e","preventDefault","errors","line","trim","length","value","duplicateLines","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","rows","onChange","target","xmlns","width","height","fill","viewBox","d","map","errorMessage","onClick","class","_c","$RefreshReg$"],"sources":["/Users/omthakkar/Documents/ReactJs/dzap/dzap-test/src/components/Content.jsx"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction Content() {\n  const [inputText, setInputText] = useState('');\n  const [errorMessages, setErrorMessages] = useState([]);\n  const [duplicateAddressLines, setDuplicateAddressLines] = useState([]);\n\n  const CombineBalances=()=>{\n    console.log(\"combine balances clicked\");\n}\nconst keepFirst=()=>{\n    console.log(\"Keep First clicked\");\n}\n\n  // Function to validate Ethereum address (basic check for hexadecimal string)\n  const isValidEthereumAddress = (address) => {\n    const ethereumAddressRegex = /^(0x)?[0-9a-fA-F]{40}$/;\n    return ethereumAddressRegex.test(address);\n  };\n\n  const findDuplicateAddressLines = (array) => {\n    const addressToLinesMap = new Map();\n    const duplicateAddresses = new Map();\n  \n    array.forEach((item, index) => {\n      const parts = item.split(' ');\n      const address = parts[0];\n  \n      if (addressToLinesMap.has(address)) {\n        const lines = addressToLinesMap.get(address);\n        lines.push(index);\n        addressToLinesMap.set(address, lines);\n  \n        // Store the duplicate address and its lines\n        if (!duplicateAddresses.has(address)) {\n          duplicateAddresses.set(address, lines);\n        }\n      } else {\n        addressToLinesMap.set(address, [index]);\n      }\n    });\n  \n    // Convert the duplicateAddresses Map to an array of objects\n    const duplicateAddressLines = Array.from(duplicateAddresses, ([address, lines]) => ({ address, lines }));\n  \n    console.log('Duplicate addresses found:');\n    duplicateAddressLines.forEach(({ address, lines }) => {\n      console.log(`Address: ${address} - Lines: ${lines.join(', ')}`);\n    });\n  \n    return duplicateAddressLines;\n  };\n  \n\n  const checkError = (e) => {\n    e.preventDefault();\n    const lines = inputText.split('\\n');\n    const errors = [];\n\n    lines.forEach((line, index) => {\n      const parts = line.trim().split(/[,:= ]+/); // Split by colons, commas, spaces, or equal signs\n      if (parts.length !== 2) {\n        errors.push(`Line ${index + 1} does not have exactly two parts.`);\n      } else {\n        const [address, value] = parts;\n        if (!isValidEthereumAddress(address)) {\n          errors.push(`Line ${index + 1} contains an invalid Ethereum address.`);\n        }\n        if (!/^\\d+$/.test(value)) {\n          errors.push(`Line ${index + 1} contains a non-numeric value.`);\n        }\n      }\n    });\n\n    const duplicateLines = findDuplicateAddressLines(lines);\n    setDuplicateAddressLines(duplicateLines);\n    setErrorMessages(errors);\n  };\n\n  return (\n    <div className=\"container py-2\">\n      <form>\n        <div className=\"mb-3\">\n          <label htmlFor=\"exampleFormControlTextarea1\" className=\"form-label\">Addresses with Amounts</label>\n          <textarea\n            className=\"form-control bg-light text-emphasis-dark\"\n            rows=\"9\"\n            value={inputText}\n            onChange={(e) => setInputText(e.target.value)}\n          ></textarea>\n        </div>\n\n        <div className='mb-3'>\n          <p>Separated by ',' or ' ' or '='</p>\n        </div>\n\n        {errorMessages.length > 0 && (\n          <div className='d-flex border border-danger rounded-2'>\n            <div className='p-2'>\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"red\" className=\"bi bi-exclamation-circle\" viewBox=\"0 0 16 16\">\n                <path d=\"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\n                <path d=\"M7.002 11a1 1 0 1 1 2 0 1 1 0 0 1-2 0zM7.1 4.995a.905.905 0 1 1 1.8 0l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 4.995z\"/>\n              </svg>\n            </div>\n            <div className='text-danger p-2'>\n              <ul className='p-1'>\n                {errorMessages.map((errorMessage, index) => (\n                  <li className='list-group-item' key={index}>{errorMessage}</li>\n                ))}\n              </ul>\n            </div>\n          </div>\n        )}\n\n        {duplicateAddressLines.length > 0 && (\n          <div className='mb-3 row justify-content-between container'>\n          <div className='d-flex text-danger  '>\n             <div className='text-danger d-flex'><strong>Duplicated</strong></div>\n        <div className='d-flex  col-md-3 ms-auto'> \n         <div className='px-2' onClick={CombineBalances}>Keep the first one</div>\n         |\n        <div className='px-2' onClick={keepFirst}>Combine Balances</div>\n        </div>\n            \n          </div>\n          <div className='d-flex border border-danger rounded-2'>\n            <div className='p-4'>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"red\" class=\"bi bi-exclamation-circle\" viewBox=\"0 0 16 16\">\n      <path d=\"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\n      <path d=\"M7.002 11a1 1 0 1 1 2 0 1 1 0 0 1-2 0zM7.1 4.995a.905.905 0 1 1 1.8 0l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 4.995z\"/>\n    </svg>\n            </div>\n            <div className='text-danger p-1'>\n            <ul>\n      {duplicateAddressLines.map(({ address, lines }, index) => (\n        <li key={index}>\n          Address {address} encountered duplicate on line: {lines.map(lineNumber => lineNumber + 1).join(', ')}\n        </li>\n      ))}\n    </ul>\n            </div>\n          </div>\n        </div>\n        )}\n\n        <div className=\"d-grid gap-2 py-2\">\n          <button className='btn btn-primary' onClick={checkError}>Next</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Content;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}